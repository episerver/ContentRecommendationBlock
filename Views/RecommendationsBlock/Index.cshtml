@using EPiServer.Core
@using EPiServer.Personalization.CMS.Model

@model Episerver.Recommendations.SampleBlock.Model.RecommendationsBlockModel

<div class="newrecommendations" style="width: 100%; height: 200px">

</div>

<script type="text/javascript">

    var loadingAnimation = (function ($, undefined) {
        var animationClass = 'loadingGifContainer';
        var module = {
            startAnimation: function (containerNode, image) {
                containerNode = containerNode || 'body';
                image = image || '/resources/images/ajax-loader-bars.gif';
                var y = $(window).scrollTop();
                var loadingDiv = $('<div />')
                    .attr('class', animationClass)
                    .css('position', 'absolute')
                    .css('height', $(containerNode).height())
                    .css('width', $(containerNode).width())
                    .css('top', $(containerNode).position().top)
                    .css('left', $(containerNode).position().left)
                    .css('background', 'url(' + image + ') no-repeat scroll center center rgba(0,0,0,0.2)')
                    .css('z-index', '2');

                $(containerNode).after(loadingDiv);
            },
            stopAnimation: function () {
                $('.' + animationClass).remove();
            }
        };
        return module;
    })(jQuery);

    var target = document.getElementsByClassName('newrecommendations');

    loadingAnimation.startAnimation(target);

    var model = {
        contentId: "@Model.ContentId", siteId: "@Model.SiteId", languageId: "@Model.LanguageId", numberOfRecommendations: "@Model.NumberOfRecommendations"
    };

    $.ajax({
        type: "POST",
        data: JSON.stringify(model),
        url: "/api/recommendations/getrecommendations",
        contentType: "application/json"
    }).done(function (res) {
        $(".loadingGifContainer").remove();
        $(".newrecommendations").html(res);
    }).fail(function (error) {
        $(".loadingGifContainer").remove();
    });


    var Misc = {
        init: function () {
            if (Misc.getCookie("AcceptedCookies") != 1) {
                $(document).on("click", ".jsCookies", Misc.acceptCookies);
                $(".jsCookies").show();
            }
        },
        acceptCookies: function () {
            Misc.setCookie("AcceptedCookies", "1", (365 * 24 * 60 * 60));
            $(".jsCookies").hide();
        },
        setCookie: function (cname, cvalue, exSeconds) {
            //  Session cookie
            if (!exSeconds) {
                document.cookie = cname + "=" + cvalue + "; path=/";
                return;
            }

            var date = new Date();
            date.setTime(date.getTime() + (exSeconds * 1000));
            document.cookie = cname + "=" + cvalue + "; expires=" + date.toUTCString() + "; path=/";
        },
        getCookie: function (cname) {
            var name = cname + "=";
            var ca = document.cookie.split(";");
            for (var i = 0; i < ca.length; i++) {
                var c = ca[i];
                while (c.charAt(0) == " ") c = c.substring(1);
                if (c.indexOf(name) != -1) return c.substring(name.length, c.length);
            }
            return "";
        },
        updateValidation: function (formClass) {
            var currForm = $("." + formClass);
            currForm.removeData("validator");
            currForm.removeData("unobtrusiveValidation");
            $.validator.unobtrusive.parse(currForm);
            currForm.validate();
        }
    };
</script>